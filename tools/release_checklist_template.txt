Start:
    Freeze cocos directory, except for obvious, simple, robust fixes.
    Freeze existing code in samples and test directories
    Additions after the freeze should should be listed somewhere so they
    get tested before release.

Early:
 - Be sure all examples in test dir runs
 - If possible, unit test in utest should all pass.

Finishing:

- Proper updated license header, care to not target files which needs
  other license header

- Update text files in the top trunk directory
  Keep in mind that README it is also used as reST for the pypi page
  (see 1 in building_release_notes.txt)

	- CHANGELOG
	- LICENSE
	- INSTALL
	- README
	- compatibility notes ?

- Make sure version and release date are consistent between different files,
  and reasonable in relation with previous version

	- Version appearances in current trunk:

		- setup.py
		- changelog
		- readme
		- cocos.__init__
		- docs ?
		- (also cocos2d.org site)

	- Date appearances:

		- setup.py
		- changelog
		- google download page ?
		- (cocos2d.org site)
		

- Update setup.py

	- dependencies
	- version
	- date

- build the docs (see 2 in building_release_notes.txt)

- build the package
  example build command in windows
  setup.py sdist  >build.log

- check log for errors

- verify that non-code resources are included (currently docs\html, cocos\resources)

- install the new package, see 4 in building_release_notes.txt

- Test that the package built with setup.py works

- upload to googlecode, mark as featured, unmark as featured older packages

- Update cocos2d.org site ( see 5 in building_release_notes.txt)

- upload to pypi ( see 6 in building_release_notes.txt )

- tag the release in the repo 
